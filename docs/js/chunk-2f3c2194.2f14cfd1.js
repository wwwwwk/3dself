(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2f3c2194"],{4086:function(t,e,s){"use strict";s.d(e,"a",(function(){return i}));var r=s("5a89");class i extends r["R"]{constructor(t){super(t)}load(t,e,s,i){const o=this,n=""===this.path?r["S"].extractUrlBase(t):this.path,a=new r["x"](this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(s){try{e(o.parse(s,n))}catch(r){i?i(r):console.error(r),o.manager.itemError(t)}}),s,i)}setMaterialOptions(t){return this.materialOptions=t,this}parse(t,e){const s=t.split("\n");let r={};const i=/\s+/,n={};for(let o=0;o<s.length;o++){let t=s[o];if(t=t.trim(),0===t.length||"#"===t.charAt(0))continue;const e=t.indexOf(" ");let a=e>=0?t.substring(0,e):t;a=a.toLowerCase();let c=e>=0?t.substring(e+1):"";if(c=c.trim(),"newmtl"===a)r={name:c},n[c]=r;else if("ka"===a||"kd"===a||"ks"===a||"ke"===a){const t=c.split(i,3);r[a]=[parseFloat(t[0]),parseFloat(t[1]),parseFloat(t[2])]}else r[a]=c}const a=new o(this.resourcePath||e,this.materialOptions);return a.setCrossOrigin(this.crossOrigin),a.setManager(this.manager),a.setMaterials(n),a}}class o{constructor(t="",e={}){this.baseUrl=t,this.options=e,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=void 0!==this.options.side?this.options.side:r["A"],this.wrap=void 0!==this.options.wrap?this.options.wrap:r["ub"]}setCrossOrigin(t){return this.crossOrigin=t,this}setManager(t){this.manager=t}setMaterials(t){this.materialsInfo=this.convert(t),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(t){if(!this.options)return t;const e={};for(const s in t){const r=t[s],i={};e[s]=i;for(const t in r){let e=!0,s=r[t];const o=t.toLowerCase();switch(o){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[2]&&(e=!1);break;default:break}e&&(i[o]=s)}}return e}preload(){for(const t in this.materialsInfo)this.create(t)}getIndex(t){return this.nameLookup[t]}getAsArray(){let t=0;for(const e in this.materialsInfo)this.materialsArray[t]=this.create(e),this.nameLookup[e]=t,t++;return this.materialsArray}create(t){return void 0===this.materials[t]&&this.createMaterial_(t),this.materials[t]}createMaterial_(t){const e=this,s=this.materialsInfo[t],i={name:t,side:this.side};function o(t,e){return"string"!==typeof e||""===e?"":/^https?:\/\//i.test(e)?e:t+e}function n(t,s){if(i[t])return;const r=e.getTextureParams(s,i),n=e.loadTexture(o(e.baseUrl,r.url));n.repeat.copy(r.scale),n.offset.copy(r.offset),n.wrapS=e.wrap,n.wrapT=e.wrap,i[t]=n}for(const a in s){const t=s[a];let e;if(""!==t)switch(a.toLowerCase()){case"kd":i.color=(new r["o"]).fromArray(t);break;case"ks":i.specular=(new r["o"]).fromArray(t);break;case"ke":i.emissive=(new r["o"]).fromArray(t);break;case"map_kd":n("map",t);break;case"map_ks":n("specularMap",t);break;case"map_ke":n("emissiveMap",t);break;case"norm":n("normalMap",t);break;case"map_bump":case"bump":n("bumpMap",t);break;case"map_d":n("alphaMap",t),i.transparent=!0;break;case"ns":i.shininess=parseFloat(t);break;case"d":e=parseFloat(t),e<1&&(i.opacity=e,i.transparent=!0);break;case"tr":e=parseFloat(t),this.options&&this.options.invertTrProperty&&(e=1-e),e>0&&(i.opacity=1-e,i.transparent=!0);break;default:break}}return this.materials[t]=new r["Z"](i),this.materials[t]}getTextureParams(t,e){const s={scale:new r["Nb"](1,1),offset:new r["Nb"](0,0)},i=t.split(/\s+/);let o;return o=i.indexOf("-bm"),o>=0&&(e.bumpScale=parseFloat(i[o+1]),i.splice(o,2)),o=i.indexOf("-s"),o>=0&&(s.scale.set(parseFloat(i[o+1]),parseFloat(i[o+2])),i.splice(o,4)),o=i.indexOf("-o"),o>=0&&(s.offset.set(parseFloat(i[o+1]),parseFloat(i[o+2])),i.splice(o,4)),s.url=i.join(" ").trim(),s}loadTexture(t,e,s,i,o){const n=void 0!==this.manager?this.manager:r["r"];let a=n.getHandler(t);null===a&&(a=new r["Ib"](n)),a.setCrossOrigin&&a.setCrossOrigin(this.crossOrigin);const c=a.load(t,s,i,o);return void 0!==e&&(c.mapping=e),c}}},"603d":function(t,e,s){t.exports=s.p+"img/star.c2cc03e1.jpg"},e642:function(t,e,s){"use strict";s.d(e,"a",(function(){return d}));var r=s("5a89");const i=/^[og]\s*(.+)?/,o=/^mtllib /,n=/^usemtl /,a=/^usemap /,c=new r["Ob"],l=new r["Ob"],h=new r["Ob"],p=new r["Ob"],u=new r["Ob"];function m(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);const s=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){const s=this._finalize(!1);s&&(s.inherited||s.groupCount<=0)&&this.materials.splice(s.index,1);const r={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==s?s.smooth:this.smooth,groupStart:void 0!==s?s.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){const e={index:"number"===typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let s=this.materials.length-1;s>=0;s--)this.materials[s].groupCount<=0&&this.materials.splice(s,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},s&&s.name&&"function"===typeof s.clone){const t=s.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseNormalIndex:function(t,e){const s=parseInt(t,10);return 3*(s>=0?s-1:s+e/3)},parseUVIndex:function(t,e){const s=parseInt(t,10);return 2*(s>=0?s-1:s+e/2)},addVertex:function(t,e,s){const r=this.vertices,i=this.object.geometry.vertices;i.push(r[t+0],r[t+1],r[t+2]),i.push(r[e+0],r[e+1],r[e+2]),i.push(r[s+0],r[s+1],r[s+2])},addVertexPoint:function(t){const e=this.vertices,s=this.object.geometry.vertices;s.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices,s=this.object.geometry.vertices;s.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,s){const r=this.normals,i=this.object.geometry.normals;i.push(r[t+0],r[t+1],r[t+2]),i.push(r[e+0],r[e+1],r[e+2]),i.push(r[s+0],r[s+1],r[s+2])},addFaceNormal:function(t,e,s){const r=this.vertices,i=this.object.geometry.normals;c.fromArray(r,t),l.fromArray(r,e),h.fromArray(r,s),u.subVectors(h,l),p.subVectors(c,l),u.cross(p),u.normalize(),i.push(u.x,u.y,u.z),i.push(u.x,u.y,u.z),i.push(u.x,u.y,u.z)},addColor:function(t,e,s){const r=this.colors,i=this.object.geometry.colors;void 0!==r[t]&&i.push(r[t+0],r[t+1],r[t+2]),void 0!==r[e]&&i.push(r[e+0],r[e+1],r[e+2]),void 0!==r[s]&&i.push(r[s+0],r[s+1],r[s+2])},addUV:function(t,e,s){const r=this.uvs,i=this.object.geometry.uvs;i.push(r[t+0],r[t+1]),i.push(r[e+0],r[e+1]),i.push(r[s+0],r[s+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs,s=this.object.geometry.uvs;s.push(e[t+0],e[t+1])},addFace:function(t,e,s,r,i,o,n,a,c){const l=this.vertices.length;let h=this.parseVertexIndex(t,l),p=this.parseVertexIndex(e,l),u=this.parseVertexIndex(s,l);if(this.addVertex(h,p,u),this.addColor(h,p,u),void 0!==n&&""!==n){const t=this.normals.length;h=this.parseNormalIndex(n,t),p=this.parseNormalIndex(a,t),u=this.parseNormalIndex(c,t),this.addNormal(h,p,u)}else this.addFaceNormal(h,p,u);if(void 0!==r&&""!==r){const t=this.uvs.length;h=this.parseUVIndex(r,t),p=this.parseUVIndex(i,t),u=this.parseUVIndex(o,t),this.addUV(h,p,u),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let s=0,r=t.length;s<r;s++){const r=this.parseVertexIndex(t[s],e);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const s=this.vertices.length,r=this.uvs.length;for(let i=0,o=t.length;i<o;i++)this.addVertexLine(this.parseVertexIndex(t[i],s));for(let i=0,o=e.length;i<o;i++)this.addUVLine(this.parseUVIndex(e[i],r))}};return t.startObject("",!1),t}class d extends r["R"]{constructor(t){super(t),this.materials=null}load(t,e,s,i){const o=this,n=new r["x"](this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(t,(function(s){try{e(o.parse(s))}catch(r){i?i(r):console.error(r),o.manager.itemError(t)}}),s,i)}setMaterials(t){return this.materials=t,this}parse(t){const e=new m;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const s=t.split("\n");let c="",l="",h=0,p=[];const u="function"===typeof"".trimLeft;for(let r=0,m=s.length;r<m;r++)if(c=s[r],c=u?c.trimLeft():c.trim(),h=c.length,0!==h&&(l=c.charAt(0),"#"!==l))if("v"===l){const t=c.split(/\s+/);switch(t[0]){case"v":e.vertices.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])),t.length>=7?e.colors.push(parseFloat(t[4]),parseFloat(t[5]),parseFloat(t[6])):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]));break;case"vt":e.uvs.push(parseFloat(t[1]),parseFloat(t[2]));break}}else if("f"===l){const t=c.substr(1).trim(),s=t.split(/\s+/),r=[];for(let e=0,o=s.length;e<o;e++){const t=s[e];if(t.length>0){const e=t.split("/");r.push(e)}}const i=r[0];for(let o=1,n=r.length-1;o<n;o++){const t=r[o],s=r[o+1];e.addFace(i[0],t[0],s[0],i[1],t[1],s[1],i[2],t[2],s[2])}}else if("l"===l){const t=c.substring(1).trim().split(" ");let s=[];const r=[];if(-1===c.indexOf("/"))s=t;else for(let e=0,i=t.length;e<i;e++){const i=t[e].split("/");""!==i[0]&&s.push(i[0]),""!==i[1]&&r.push(i[1])}e.addLineGeometry(s,r)}else if("p"===l){const t=c.substr(1).trim(),s=t.split(" ");e.addPointGeometry(s)}else if(null!==(p=i.exec(c))){const t=(" "+p[0].substr(1).trim()).substr(1);e.startObject(t)}else if(n.test(c))e.object.startMaterial(c.substring(7).trim(),e.materialLibraries);else if(o.test(c))e.materialLibraries.push(c.substring(7).trim());else if(a.test(c))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===l){if(p=c.split(" "),p.length>1){const t=p[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const t=e.object.currentMaterial();t&&(t.smooth=e.object.smooth)}else{if("\0"===c)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+c+'"')}e.finalize();const d=new r["B"];d.materialLibraries=[].concat(e.materialLibraries);const f=!(1===e.objects.length&&0===e.objects[0].geometry.vertices.length);if(!0===f)for(let i=0,o=e.objects.length;i<o;i++){const t=e.objects[i],s=t.geometry,o=t.materials,n="Line"===s.type,a="Points"===s.type;let c=!1;if(0===s.vertices.length)continue;const l=new r["i"];l.setAttribute("position",new r["y"](s.vertices,3)),s.normals.length>0&&l.setAttribute("normal",new r["y"](s.normals,3)),s.colors.length>0&&(c=!0,l.setAttribute("color",new r["y"](s.colors,3))),!0===s.hasUVIndices&&l.setAttribute("uv",new r["y"](s.uvs,2));const h=[];for(let i=0,u=o.length;i<u;i++){const t=o[i],s=t.name+"_"+t.smooth+"_"+c;let l=e.materials[s];if(null!==this.materials)if(l=this.materials.create(t.name),!n||!l||l instanceof r["L"]){if(a&&l&&!(l instanceof r["nb"])){const t=new r["nb"]({size:10,sizeAttenuation:!1});r["U"].prototype.copy.call(t,l),t.color.copy(l.color),t.map=l.map,l=t}}else{const t=new r["L"];r["U"].prototype.copy.call(t,l),t.color.copy(l.color),l=t}void 0===l&&(l=n?new r["L"]:a?new r["nb"]({size:1,sizeAttenuation:!1}):new r["Z"],l.name=t.name,l.flatShading=!t.smooth,l.vertexColors=c,e.materials[s]=l),h.push(l)}let p;if(h.length>1){for(let t=0,e=o.length;t<e;t++){const e=o[t];l.addGroup(e.groupStart,e.groupCount,t)}p=n?new r["N"](l,h):a?new r["mb"](l,h):new r["X"](l,h)}else p=n?new r["N"](l,h[0]):a?new r["mb"](l,h[0]):new r["X"](l,h[0]);p.name=t.name,d.add(p)}else if(e.vertices.length>0){const t=new r["nb"]({size:1,sizeAttenuation:!1}),s=new r["i"];s.setAttribute("position",new r["y"](e.vertices,3)),e.colors.length>0&&void 0!==e.colors[0]&&(s.setAttribute("color",new r["y"](e.colors,3)),t.vertexColors=!0);const i=new r["mb"](s,t);d.add(i)}return d}}}}]);
//# sourceMappingURL=chunk-2f3c2194.2f14cfd1.js.map