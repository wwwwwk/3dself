{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/loaders/MTLLoader.js","webpack:///./src/assets/city/star.jpg","webpack:///./node_modules/three/examples/jsm/loaders/OBJLoader.js"],"names":["MTLLoader","manager","super","url","onLoad","onProgress","onError","scope","this","path","extractUrlBase","loader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","value","materialOptions","lines","split","info","delimiter_pattern","materialsInfo","i","length","line","trim","charAt","pos","indexOf","key","substring","toLowerCase","name","ss","parseFloat","materialCreator","MaterialCreator","resourcePath","setCrossOrigin","crossOrigin","setManager","setMaterials","baseUrl","options","materials","materialsArray","nameLookup","side","undefined","wrap","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","create","materialName","index","createMaterial_","params","resolveURL","test","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","repeat","copy","scale","offset","wrapS","wrapT","n","color","fromArray","specular","emissive","transparent","shininess","opacity","invertTrProperty","matParams","items","bumpScale","splice","set","join","mapping","getHandler","texture","module","exports","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_vA","_vB","_vC","_ab","_cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","material","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","replace","lineFirstChar","lineLength","result","trimLeft","data","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","exec","warn","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","materialPoints","size","sizeAttenuation","prototype","call","materialLine","flatShading","vertexColors","mesh","addGroup","add","points"],"mappings":"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","file":"js/chunk-2f3c2194.2f14cfd1.js","sourcesContent":["import {\n\tColor,\n\tDefaultLoadingManager,\n\tFileLoader,\n\tFrontSide,\n\tLoader,\n\tLoaderUtils,\n\tMeshPhongMaterial,\n\tRepeatWrapping,\n\tTextureLoader,\n\tVector2\n} from 'three';\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n */\n\nclass MTLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterialOptions( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse( text, path ) {\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet info = {};\n\t\tconst delimiter_pattern = /\\s+/;\n\t\tconst materialsInfo = {};\n\n\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlet line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst pos = line.indexOf( ' ' );\n\n\t\t\tlet key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tlet value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tconst ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst materialCreator = new MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n}\n\n/**\n * Create a new MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nclass MaterialCreator {\n\n\tconstructor( baseUrl = '', options = {} ) {\n\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.options = options;\n\t\tthis.materialsInfo = {};\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t\tthis.crossOrigin = 'anonymous';\n\n\t\tthis.side = ( this.options.side !== undefined ) ? this.options.side : FrontSide;\n\t\tthis.wrap = ( this.options.wrap !== undefined ) ? this.options.wrap : RepeatWrapping;\n\n\t}\n\n\tsetCrossOrigin( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t}\n\n\tsetManager( value ) {\n\n\t\tthis.manager = value;\n\n\t}\n\n\tsetMaterials( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t}\n\n\tconvert( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tconst converted = {};\n\n\t\tfor ( const mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tconst mat = materialsInfo[ mn ];\n\n\t\t\tconst covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( const prop in mat ) {\n\n\t\t\t\tlet save = true;\n\t\t\t\tlet value = mat[ prop ];\n\t\t\t\tconst lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t}\n\n\tpreload() {\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t}\n\n\tgetIndex( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t}\n\n\tgetAsArray() {\n\n\t\tlet index = 0;\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t}\n\n\tcreate( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tcreateMaterial_( materialName ) {\n\n\t\t// Create material\n\n\t\tconst scope = this;\n\t\tconst mat = this.materialsInfo[ materialName ];\n\t\tconst params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tconst texParams = scope.getTextureParams( value, params );\n\t\t\tconst map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( const prop in mat ) {\n\n\t\t\tconst value = mat[ prop ];\n\t\t\tlet n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( 'map', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( 'specularMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( 'emissiveMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( 'normalMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( 'bumpMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( 'alphaMap', value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tgetTextureParams( value, matParams ) {\n\n\t\tconst texParams = {\n\n\t\t\tscale: new Vector2( 1, 1 ),\n\t\t\toffset: new Vector2( 0, 0 )\n\n\t\t };\n\n\t\tconst items = value.split( /\\s+/ );\n\t\tlet pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t}\n\n\tloadTexture( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tconst manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\n\t\tlet loader = manager.getHandler( url );\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\n\t\tconst texture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n}\n\nexport { MTLLoader };\n","module.exports = __webpack_public_path__ + \"img/star.c2cc03e1.jpg\";","import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet line = '', lineFirstChar = '';\n\t\tlet lineLength = 0;\n\t\tlet result = [];\n\n\t\t// Faster to just trim left side of the line. Use if available.\n\t\tconst trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tline = lines[ i ];\n\n\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\tlineLength = line.length;\n\n\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( /\\s+/ );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( /\\s+/ );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"sourceRoot":""}